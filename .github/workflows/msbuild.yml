name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .\SQLite.NET.2017.MSBuild.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: ReleaseNativeOnly

jobs:
  build:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        vs-version: '[15.0,16.0)'

    #- name: Restore NuGet packages
    #  working-directory: ${{env.GITHUB_WORKSPACE}}
    #  run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      #run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      run: msbuild /m /p:Configuration=ReleaseNativeOnly /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}

    - name: Build Win32
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=ReleaseNativeOnly /p:Platform=Win32 ${{env.SOLUTION_FILE_PATH}}
